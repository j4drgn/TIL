# TIL (Today I Learned) Repository Organization Rules

## Folder Structure

- Top-level folders are organized by technology category (e.g., TECH, MySQL, etc.)
- Subfolders are organized by subcategories of the technology (e.g., TECH/Java, TECH/React, etc.)
- Yearly folders (e.g., 2024, 2025) are for daily learning content
- 관련 파일들은 주제별로 적절한 하위 디렉토리에 정리하여 업로드 (예: Java 배열 관련 파일들은 TECH/Java/arrayType/ 디렉토리에 저장)

## Commit Rules

1. Create separate commit messages for each directory
2. Create separate commit messages for individual files (except when multiple files are on the same topic)
3. Commit message format: "[Technology] Brief description of learning content"
   - Example: "React component structure and basic concepts learning examples added"
   - Example: "Java basic example code added - operators, control statements, type casting, input, etc."
   - Example: "MySQL index concept documentation added"
4. Single file commit message format: "[Technology] [Filename] - Content description"
   - Example: "React useEffect.md - Lifecycle hook usage summary"
   - Example: "Java Stream.java - Stream API example code"

## File Writing Rules

1. Code examples: Write in executable form
2. Markdown documents:
   - Explain key concepts
   - Include code snippets
   - Summarize learning content

## Git Management Rules

1. When adding projects with embedded Git repositories:
   - Remove internal .git directories before adding
   - Or add as submodules
2. Add unnecessary build files or temporary files to .gitignore

## Daily Learning Summary

- Create files in the Year/Month folder with the format "YYYY-MM-DD (Day).md"
- Briefly summarize what was learned that day

## Response Language Rule

- Always respond in Korean regardless of the language used in this file
