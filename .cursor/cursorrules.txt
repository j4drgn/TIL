# TIL (Today I Learned) Repository Organization Rules

## Folder Structure

- Top-level folders are organized by technology category (e.g., TECH, MySQL, etc.)
- Subfolders are organized by subcategories of the technology (e.g., TECH/Java, TECH/React, etc.)
- Yearly folders (e.g., 2024, 2025) are for daily learning content
- Related files should be organized and uploaded in appropriate subdirectories by topic (e.g., Java array-related files should be stored in TECH/Java/arrayType/ directory)

## Commit Rules

1. Create separate commit messages for each directory
2. Create separate commit messages for individual files (except when multiple files are on the same topic)
3. Commit message format: "[Technology] Brief description of learning content"
   - Example: "React component structure and basic concepts learning examples added"
   - Example: "Java basic example code added - operators, control statements, type casting, input, etc."
   - Example: "MySQL index concept documentation added"
4. Single file commit message format: "[Technology] [Filename] - Content description"
   - Example: "React useEffect.md - Lifecycle hook usage summary"
   - Example: "Java Stream.java - Stream API example code"

## File Writing Rules

1. Code examples: Write in executable form
2. Markdown documents:
   - Explain key concepts
   - Include code snippets
   - Summarize learning content

## README.md Management Rules

1. Each directory should have its own README.md that briefly explains the purpose and content of the directory
2. Avoid duplicate content between parent and child directory README.md files
3. Main README.md in a technology directory should provide a comprehensive overview of the topic
4. Subdirectory README.md files should focus on specific aspects and link back to the parent README.md
5. Use relative links between README.md files for easy navigation

## Git Management Rules

1. When adding projects with embedded Git repositories:
   - Remove internal .git directories before adding
   - Or add as submodules
2. Add unnecessary build files or temporary files to .gitignore
3. Do not commit auto-generated README.md files from frameworks like React
4. Wait for explicit approval before pushing changes to remote repository
   - Prepare all changes and commits locally first
   - Show the changes to be pushed
   - Push only after receiving explicit confirmation

## Daily Learning Summary

- Create files in the Year/Month folder with the format "YYYY-MM-DD (Day).md"
- Briefly summarize what was learned that day

## Response Language Rule

- Always respond in Korean regardless of the language used in this file
- Write this file (.cursorrules) in English
